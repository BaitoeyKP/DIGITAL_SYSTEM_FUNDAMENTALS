////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : MUX4_TO_1.vf
// /___/   /\     Timestamp : 11/21/2021 21:05:25
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -intstyle ise -family spartan6 -verilog C:/Users/beaut/Desktop/flie/LAB7/MUX4_TO_1.vf -w C:/Users/beaut/Desktop/flie/LAB7/MUX4_TO_1.sch
//Design Name: MUX4_TO_1
//Device: spartan6
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale  100 ps / 10 ps

module M4_1E_HXILINX_MUX4_TO_1 (O, D0, D1, D2, D3, E, S0, S1);
    

   output O;

   input  D0;
   input  D1;
   input  D2;
   input  D3;
   input  E;
   input  S0;
   input  S1;

   reg O;

   always @ ( D0 or D1 or D2 or D3 or E or S0 or S1)
   begin
      if(!E)
      O <= 1'b0;
      else 
      begin
        case({S1,S0})
        2'b00 : O <= D0;
        2'b01 : O <= D1;
        2'b10 : O <= D2;
        2'b11 : O <= D3;
        endcase
      end
   end
    
endmodule
`timescale 1ns / 1ps

module MUX4_TO_1(CLK200Hz, 
                 DATA1, 
                 DATA2, 
                 DATA3, 
                 DATA4, 
                 CM0, 
                 CM1, 
                 CM2, 
                 CM3, 
                 OUTPUT);

    input CLK200Hz;
    input [3:0] DATA1;
    input [3:0] DATA2;
    input [3:0] DATA3;
    input [3:0] DATA4;
   output CM0;
   output CM1;
   output CM2;
   output CM3;
   output [3:0] OUTPUT;
   
   wire XLXN_29;
   wire XLXN_34;
   wire XLXN_36;
   wire XLXN_46;
   wire XLXN_49;
   wire XLXN_88;
   wire XLXN_90;
   wire XLXN_95;
   
   (* HU_SET = "XLXI_1_0" *) 
   M4_1E_HXILINX_MUX4_TO_1  XLXI_1 (.D0(DATA1[0]), 
                                   .D1(DATA2[0]), 
                                   .D2(DATA3[0]), 
                                   .D3(DATA4[0]), 
                                   .E(XLXN_29), 
                                   .S0(XLXN_46), 
                                   .S1(XLXN_95), 
                                   .O(OUTPUT[0]));
   (* HU_SET = "XLXI_2_1" *) 
   M4_1E_HXILINX_MUX4_TO_1  XLXI_2 (.D0(DATA1[1]), 
                                   .D1(DATA2[1]), 
                                   .D2(DATA3[1]), 
                                   .D3(DATA4[1]), 
                                   .E(XLXN_29), 
                                   .S0(XLXN_46), 
                                   .S1(XLXN_95), 
                                   .O(OUTPUT[1]));
   (* HU_SET = "XLXI_3_2" *) 
   M4_1E_HXILINX_MUX4_TO_1  XLXI_3 (.D0(DATA1[2]), 
                                   .D1(DATA2[2]), 
                                   .D2(DATA3[2]), 
                                   .D3(DATA4[2]), 
                                   .E(XLXN_29), 
                                   .S0(XLXN_46), 
                                   .S1(XLXN_95), 
                                   .O(OUTPUT[2]));
   (* HU_SET = "XLXI_4_3" *) 
   M4_1E_HXILINX_MUX4_TO_1  XLXI_4 (.D0(DATA1[3]), 
                                   .D1(DATA2[3]), 
                                   .D2(DATA3[3]), 
                                   .D3(DATA4[3]), 
                                   .E(XLXN_29), 
                                   .S0(XLXN_46), 
                                   .S1(XLXN_95), 
                                   .O(OUTPUT[3]));
   VCC  XLXI_5 (.P(XLXN_29));
   FDC  XLXI_6 (.C(CLK200Hz), 
               .CLR(XLXN_49), 
               .D(XLXN_46), 
               .Q(XLXN_34));
   FDC  XLXI_7 (.C(XLXN_34), 
               .CLR(XLXN_49), 
               .D(XLXN_95), 
               .Q(XLXN_36));
   INV  XLXI_8 (.I(XLXN_34), 
               .O(XLXN_46));
   INV  XLXI_9 (.I(XLXN_36), 
               .O(XLXN_95));
   GND  XLXI_10 (.G(XLXN_49));
   INV  XLXI_20 (.I(XLXN_46), 
                .O(XLXN_88));
   INV  XLXI_21 (.I(XLXN_95), 
                .O(XLXN_90));
   NAND2  XLXI_22 (.I0(XLXN_90), 
                  .I1(XLXN_88), 
                  .O(CM0));
   NAND2  XLXI_23 (.I0(XLXN_90), 
                  .I1(XLXN_46), 
                  .O(CM1));
   NAND2  XLXI_24 (.I0(XLXN_88), 
                  .I1(XLXN_95), 
                  .O(CM2));
   NAND2  XLXI_25 (.I0(XLXN_46), 
                  .I1(XLXN_95), 
                  .O(CM3));
endmodule
