////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : counter0_9_0tctest.vf
// /___/   /\     Timestamp : 10/09/2022 11:21:36
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -intstyle ise -family spartan6 -verilog E:/lab6/counter0_9_0tctest.vf -w E:/lab6/counter0_9_0tctest.sch
//Design Name: counter0_9_0tctest
//Device: spartan6
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 100 ps / 10 ps

module FJKC_HXILINX_counter0_9_0tctest(Q, C, CLR, J, K);
   
   output             Q;

   input 	      C;	
   input 	      CLR;	
   input              J;
   input              K;
   
   parameter INIT = 1'b0;
   reg                Q = INIT;


   always @(posedge C or posedge CLR)
     begin
	if (CLR)
	  Q <= 1'b0;
	else
        begin
           if(!J)
           begin
              if(K)
              Q <= 1'b0;
           end
           else
           begin
              if(!K)
              Q <= 1'b1;
              else 
              Q <= !Q;
           end
        end
     end
   
endmodule
`timescale 1ns / 1ps

module counter0_9_0tctest(clk, 
                          A_count, 
                          B_count, 
                          C_count, 
                          D_count, 
                          TC);

    input clk;
   output A_count;
   output B_count;
   output C_count;
   output D_count;
   output TC;
   
   wire XLXN_1;
   wire XLXN_2;
   wire XLXN_3;
   wire XLXN_9;
   wire XLXN_10;
   wire XLXN_17;
   wire XLXN_22;
   wire XLXN_23;
   wire XLXN_25;
   wire XLXN_26;
   wire A_count_DUMMY;
   wire D_count_DUMMY;
   wire C_count_DUMMY;
   wire B_count_DUMMY;
   
   assign A_count = A_count_DUMMY;
   assign B_count = B_count_DUMMY;
   assign C_count = C_count_DUMMY;
   assign D_count = D_count_DUMMY;
   (* HU_SET = "XLXI_1_0" *) 
   FJKC_HXILINX_counter0_9_0tctest  XLXI_1 (.C(clk), 
                                           .CLR(XLXN_17), 
                                           .J(XLXN_1), 
                                           .K(XLXN_1), 
                                           .Q(A_count_DUMMY));
   VCC  XLXI_2 (.P(XLXN_1));
   (* HU_SET = "XLXI_3_1" *) 
   FJKC_HXILINX_counter0_9_0tctest  XLXI_3 (.C(clk), 
                                           .CLR(XLXN_17), 
                                           .J(XLXN_2), 
                                           .K(XLXN_2), 
                                           .Q(C_count_DUMMY));
   (* HU_SET = "XLXI_4_2" *) 
   FJKC_HXILINX_counter0_9_0tctest  XLXI_4 (.C(clk), 
                                           .CLR(XLXN_17), 
                                           .J(XLXN_3), 
                                           .K(A_count_DUMMY), 
                                           .Q(D_count_DUMMY));
   AND2  XLXI_5 (.I0(A_count_DUMMY), 
                .I1(B_count_DUMMY), 
                .O(XLXN_2));
   (* HU_SET = "XLXI_6_3" *) 
   FJKC_HXILINX_counter0_9_0tctest  XLXI_6 (.C(clk), 
                                           .CLR(XLXN_17), 
                                           .J(XLXN_9), 
                                           .K(A_count_DUMMY), 
                                           .Q(B_count_DUMMY));
   AND3  XLXI_7 (.I0(A_count_DUMMY), 
                .I1(B_count_DUMMY), 
                .I2(C_count_DUMMY), 
                .O(XLXN_3));
   AND2  XLXI_8 (.I0(A_count_DUMMY), 
                .I1(XLXN_10), 
                .O(XLXN_9));
   INV  XLXI_9 (.I(D_count_DUMMY), 
               .O(XLXN_10));
   GND  XLXI_10 (.G(XLXN_17));
   AND4  XLXI_11 (.I0(XLXN_26), 
                 .I1(XLXN_23), 
                 .I2(XLXN_22), 
                 .I3(XLXN_25), 
                 .O(TC));
   INV  XLXI_12 (.I(B_count_DUMMY), 
                .O(XLXN_22));
   INV  XLXI_14 (.I(C_count_DUMMY), 
                .O(XLXN_23));
   INV  XLXI_15 (.I(A_count_DUMMY), 
                .O(XLXN_25));
   INV  XLXI_16 (.I(D_count_DUMMY), 
                .O(XLXN_26));
endmodule
